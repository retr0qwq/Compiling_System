
;; Function add (add, funcdef_no=0, decl_uid=2347, cgraph_uid=1, symbol_order=1)


Analyzing function body size: add/1

IPA function summary for add/1
  global time:     3.000000
  self size:       4
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:2.000000, time:3.000000
    size:2.000000, time:0.000000,  executed if:(not inlined)
  calls:

int add (int a, int b)
{
  int D.2359;
  int _3;

  <bb 2> :
  _3 = a_1(D) + b_2(D);

  <bb 3> :
<L0>:
  return _3;

}



;; Function main (main, funcdef_no=1, decl_uid=2349, cgraph_uid=2, symbol_order=2)


Analyzing function body size: main/2

IPA function summary for main/2
  global time:     71.000000
  self size:       27
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:9.000000, time:10.000000
    size:2.000000, time:0.000000,  executed if:(not inlined)
  calls:
    printf/4 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12
    printf/4 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12
    add/1 function not considered for inlining
      freq:1.00 loop depth: 0 size: 4 time: 13 callee size: 2 stack: 0
    printf/4 function body not available
      freq:1.00 loop depth: 0 size: 4 time: 13
    __builtin_puts/3 function body not available
      freq:1.00 loop depth: 0 size: 2 time: 11

int main ()
{
  int i;
  int sum;
  int a;
  int D.2361;
  int _1;
  int counter.0_2;
  int _3;
  int counter.1_4;
  int _16;

  <bb 2> :
  __builtin_puts (&"Hello World"[0]);
  a_9 = 3;
  _1 = a_9 * a_9;
  printf ("SQUARE(%d) = %d\n", a_9, _1);
  sum_12 = add (5, 7);
  printf ("Sum = %d\n", sum_12);
  i_14 = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  counter.0_2 = counter;
  _3 = i_5 + counter.0_2;
  counter = _3;
  i_18 = i_5 + 1;

  <bb 4> :
  # i_5 = PHI <i_14(2), i_18(3)>
  if (i_5 <= 4)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  counter.1_4 = counter;
  printf ("Counter = %d\n", counter.1_4);
  _16 = 0;

  <bb 6> :
<L3>:
  return _16;

}


